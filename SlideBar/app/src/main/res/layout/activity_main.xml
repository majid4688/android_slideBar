<?xml version="1.0" encoding="utf-8"?>
<!--하나의 FrameLayout 안에 3개의 LinearLayout을 추가한 형태-->
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <!--FrameLayout을 사용하는 이유는  여러 개의 뷰를 추가하는 경우 중첩시킬 수 있으므로, 뷰를 중첩한 후 뷰를 전환하여 보여주는
      방식으로 사용할 때 유용하다. 차례차례 쌓아놓은 형식이기 때문에 마지막에 추가된게 가장 위에 있게 됨. LinearyLayout은 사각형 영역을 이용하여 화면을 구성하는 방법-->
    <!--첫번째 레이아웃은 fill속성을 모두 match_parent로 지정하여 화면 전체를 채우도록 한다. 배경색을 지정해서 다른 것과 구분되도록 만든다.-->
    <LinearLayout
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="#ff5555ff">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Base Area"
            android:textColor="#ffffffff"
            />
    </LinearLayout>
    <!--두번째 레이아웃은 슬라이딩으로 보여줄 뷰가 되고, 마찬가지로 배경색을 지정해서 화면 전체를 채우는 뷰와 구분되도록 만든다.-->
    <!--layout_gravity라는 것은 화면이 오른쪽에 치우치도록 하는 것 -->
    <!--이 뷰는 layout-width의 속성을 숫자로 지정해서 화면 전체가 아니라 일부를 채우도록 설정한다. -->
    <LinearLayout
        android:orientation="vertical"
        android:layout_width="200dp"
        android:layout_height="match_parent"
        android:layout_gravity="right"
        android:id="@+id/slidingPage01"
        android:background="#e1f1f5"
        android:visibility="gone">
        <!--visivility을 gone으로 해서 사용자가 원하는 시점에 보이게 한다. 추후에 버튼을 눌러 다시 visible하게 할 예정  -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Area #!"
            android:id="@+id/textView"
            android:layout_weight="1" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Area #2"
            android:id="@+id/textView2"
            android:layout_weight="0.48" />
    </LinearLayout>
    <!--세번째 레이아웃은 버튼만 보이도록 설정할 것이기 때문에 배경을 투명하게 설정한다. -->
    <!--버튼을 담고있는 layout_gravity의 속성값이 right|top이므로 버튼은 화면의 오른쪽 위에 보이게 된다. 이것은 사용자가 맘대로 설정 가능 -->
    <LinearLayout
        android:orientation="vertical"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="right|top"
        android:background="#00000000">
        <Button
            android:id="@+id/button1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Open"
            />
    </LinearLayout>
    <!--결과적으로 프로그램을 실행하면, 화면 전체를 채우고 있는 첫 번째 뷰와 버튼이 포함된 세 번째 뷰가 보이게 되고,
    세번째 뷰의 경우 배경부분을 투명하게 해놨으므로, 버튼이 하나 있는 형태로 보이게 됨-->
</FrameLayout>